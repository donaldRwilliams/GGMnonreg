% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constrained.R
\name{constrained}
\alias{constrained}
\title{Precision Matrix with Known Graph}
\usage{
constrained(Sigma, adj)
}
\arguments{
\item{Sigma}{Covariance matrix}

\item{adj}{An adjacency matrix that encodes the constraints,
where a zero indicates that element should be zero.}
}
\value{
A list containing the following:

\itemize{

\item{\strong{Theta}}: Inverse of the covariance matrix
(precision matrix), that encodes the conditional
(in)dependence structure.

\item{\strong{Sigma}}: Covariance matrix.

\item{\strong{wadj}}: Weighted adjacency matrix, corresponding
to the partial correlation network.

}
}
\description{
Compute the maximum likelihood estimate of the precision matrix,
given a known graphical structure (i.e., an adjacency matrix).
This approach was originally described in
"The Elements of Statistical Learning"
\insertCite{@see pg. 631, @hastie2009elements}{GGMnonreg}.
}
\note{
The algorithm is written in \code{c++}, and should scale to high dimensions.

Note there are a variety of algorithms for this purpose. Simulation
studies indicated that this approach is both accurate and computationally
efficient \insertCite{@HFT therein, @emmert2019constrained}{GGMnonreg}
}
\examples{
# data
Y <- ptsd

# estimate graph
fit <- ggm_inference(Y, boot = FALSE)

# constrain to zero
constrained_graph <- constrained(cor(Y), fit$adj)

}
\references{
\insertAllCited{}
}
